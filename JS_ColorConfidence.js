// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import { Big } from "big.js";

// BEGIN EXTRA CODE
async function CreateMendixObject(entity) {
	return new Promise(function (resolve, reject) {
		mx.data.create({
			entity: entity,
			callback: function (obj) { resolve(obj) },
			error: function (e) { reject(e) }
		});
	});
}
// END EXTRA CODE

/**
 * @returns {Promise.<MxObject>}
 */
export async function JS_ColorConfidence() {
	// BEGIN USER CODE
	return new Promise(function (resolve, reject) {
		const SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;
		let recognition = new SpeechRecognition();
		let pid;
		recognition.lang = "en-US";
		recognition.continuous = false;
		recognition.interimResults = false;
		recognition.maxAlternatives = 1;
		recognition.onresult = function (event) {
			const color = event.results[0][0].transcript;
			const confidence = event.results[0][0].confidence;
			console.log('Result received: ' + color);
			mx.ui.hideProgress(pid);
			CreateMendixObject("MyFirstModule.SpokenColor")
				.then(function (mxObj) {
					mxObj.set("Color", color);
					mxObj.set("Confidence", new Big(confidence).toFixed(4)); // ???
					resolve(mxObj); // needs to return an object
				});

		}
		recognition.start();
		pid = mx.ui.showProgress("Now listening for your favorite color...");
		//sometime later, resolve with a color..
		// resolve('green');
	});
	// END USER CODE
}
